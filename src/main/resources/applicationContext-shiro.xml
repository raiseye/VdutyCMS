<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	default-lazy-init="true">
	
	<description>Shiro安全配置</description>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login" />
		<property name="successUrl" value="/manager/admin" />
		<property name="unauthorizedUrl" value="/admin/login" />
		<property name="filterChainDefinitions">
			<value>
<!-- 				/admin/** = authc -->
				/admin/login = anon
				/manager/* = authc
<!-- 				/role/** = roles[admin] -->
<!-- 				/permission/** = perms[permssion:look] -->
<!-- 				/** = authc -->
			</value>
		</property>
	</bean>
	
	<bean id="adminRealm" class="com.vduty.cms.web.admin.service.AdminRealm" />
    <!-- <bean id="userRealm" class="com.vduty.cms.web.service.UserRealm" /> -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 单realm应用。如果有多个realm，使用‘realms’属性代替 -->
		<!-- SecurityUtils.getSubject().login 会有adminRealm对应的方法执行 -->
		 <!-- 可以配置多个Realm，其实会把realms属性赋值给ModularRealmAuthenticator的realms属性 -->
        <!-- <property name="realms">
            <list>
                <ref bean="userRealm" />
                <ref bean="adminRealm"/>
            </list>
        </property> -->
        <property name="realm" ref="adminRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" />
          
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager" />  
    </bean>   
    
    <bean id="hashedCredentialsMatcher"  
        class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">  
            <property name="hashAlgorithmName" value="MD5" />  
            <property name="storedCredentialsHexEncoded" value="true" />  
            <property name="hashIterations" value="1" />  
    </bean>
    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>     

	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

</beans>

     